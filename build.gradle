/*
 * Copyright (c) 2022-2022 Balanced.network.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import network.balanced.score.dependencies.Dependencies


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath Dependencies.javaeePlugin
    }
}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'foundation.icon.javaee'

    sourceSets {
        intTest {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            java {
            }
        }

    }

    configurations {
        intTestImplementation.extendsFrom testImplementation
        intTestAnnotationProcessor.extendsFrom testAnnotationProcessor
        intTestRuntimeOnly.extendsFrom testRuntimeOnly
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    // need to add this option to retrieve formal parameter names
    compileJava {
        options.compilerArgs += ['-parameters']
    }

    def loadProperties = {
        def scoreIntegrationTest = new HashMap<String, Object>()
        scoreIntegrationTest.put('env.props', new File(project(':integrationtest-lib').projectDir, 'conf/env.props'));
        
        def scorePrefix = 'score.path.'
        scoreIntegrationTest.put(scorePrefix + 'governance', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/governance.zip'));
        scoreIntegrationTest.put(scorePrefix + 'baln', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/baln.zip'));
        scoreIntegrationTest.put(scorePrefix + 'bwt', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/bwt.zip'));
        scoreIntegrationTest.put(scorePrefix + 'dex', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/dex.zip'));
        scoreIntegrationTest.put(scorePrefix + 'feehandler', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/feehandler.zip'));
        scoreIntegrationTest.put(scorePrefix + 'loans', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/loans.zip'));
        scoreIntegrationTest.put(scorePrefix + 'rebalancing', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/rebalancing.zip'));
        scoreIntegrationTest.put(scorePrefix + 'rewards', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/rewards.zip'));
        scoreIntegrationTest.put(scorePrefix + 'sicx', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/sicx.zip'));
        scoreIntegrationTest.put(scorePrefix + 'bnusd', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/bnusd.zip'));
        scoreIntegrationTest.put(scorePrefix + 'daofund', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/daofund.zip'));
        scoreIntegrationTest.put(scorePrefix + 'dividends', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/dividends.zip'));
        scoreIntegrationTest.put(scorePrefix + 'oracle', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/oracle.zip'));
        scoreIntegrationTest.put(scorePrefix + 'reserve', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/reserve.zip'));
        scoreIntegrationTest.put(scorePrefix + 'router', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/router.zip'));
        scoreIntegrationTest.put(scorePrefix + 'staking', new File(project(':integrationtest-lib').projectDir, 'src/main/java/network/balanced/score/pythonContracts/staking.zip'));
        ext['scoreIntegrationTest'] = scoreIntegrationTest

    }
    loadProperties()
}
