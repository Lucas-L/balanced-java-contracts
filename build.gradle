/*
 * Copyright (c) 2022-2022 Balanced.network.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import network.balanced.score.dependencies.Dependencies

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath Dependencies.javaeePlugin
    }
}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'foundation.icon.javaee'

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    // need to add this option to retrieve formal parameter names
    compileJava {
        options.compilerArgs += ['-parameters']
    }

    tasks.named('test') {
        // Use JUnit Platform for unit tests.
        useJUnitPlatform()
    }

    sourceSets {
        intTest {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            java {
            }
        }
    }

    configurations {
        intTestImplementation.extendsFrom testImplementation
        intTestAnnotationProcessor.extendsFrom testAnnotationProcessor
        intTestRuntimeOnly.extendsFrom testRuntimeOnly
    }

    def loadProperties = {
        def prefix = 'score-test.'
        def props = project.getProperties()
        def scoreTest = new HashMap<String, Object>()

        scoreTest.put('keystoreName', props.get(prefix + 'keystoreName'))
        scoreTest.put('keystorePass', props.get(prefix + 'keystorePass'))
        scoreTest.put('url', props.getOrDefault(prefix + 'url', 'http://127.0.0.1:9082/api/v3'))
        scoreTest.put('nid', props.getOrDefault(prefix + 'nid', 3))

        scoreTest.put('sicx.keystoreName', props.get(prefix + 'keystoreName'))
        scoreTest.put('sicx.keystorePass', props.get(prefix + 'keystorePass'))
        scoreTest.put('sicx.url', props.getOrDefault(prefix + 'url', 'http://127.0.0.1:9082/api/v3'))
        scoreTest.put('sicx.nid', props.getOrDefault(prefix + 'nid', 3))
        scoreTest.put('sicx.scoreFilePath', "./sicx.zip")

        scoreTest.put('system.keystoreName', props.get(prefix + 'keystoreName'))
        scoreTest.put('system.keystorePass', props.get(prefix + 'keystorePass'))
        scoreTest.put('system.url', props.getOrDefault(prefix + 'url', 'http://127.0.0.1:9082/api/v3'))
        scoreTest.put('system.nid', props.getOrDefault(prefix + 'nid', 3))

        scoreTest.put('tester.keystoreName', props.get(prefix + 'keystoreName'))
        scoreTest.put('tester.keystorePass', props.get(prefix + 'keystorePass'))
        scoreTest.put('tester.url', props.getOrDefault(prefix + 'url', 'http://127.0.0.1:9082/api/v3'))
        scoreTest.put('tester.nid', props.getOrDefault(prefix + 'nid', 3))
        scoreTest.put('tester.scoreFilePath', "./sicx.zip")

        ext['scoreTest'] = scoreTest
    }
    loadProperties()
}
