import network.balanced.score.dependencies.Dependencies

plugins {
    id 'java'
}

version '0.1.1'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly Dependencies.javaeeApi
    implementation Dependencies.javaeeScorex
    implementation Dependencies.minimalJson
    implementation project(':score-lib')

    testImplementation Dependencies.javaeeUnitTest
    // Use JUnit Jupiter for testing.
    testImplementation Dependencies.junitJupiter
    testRuntimeOnly Dependencies.junitJupiterEngine
    testImplementation project(':test-lib')
    testImplementation Dependencies.mockitoCore
    testImplementation Dependencies.mockitoInline
}


optimizedJar {
    mainClassName = 'network.balanced.score.utility.Stability.Stability'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
        mainnet {
            uri = 'https://ctz.solidwallet.io/api/v3'
            nid = 0x1
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {}
}

test {
    useJUnitPlatform()
}