/*
 * Copyright (c) 2022-2022 Balanced.network.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import network.balanced.score.dependencies.Dependencies

plugins {
    id 'java'
}

version '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly Dependencies.javaeeApi
    implementation Dependencies.javaeeScorex
    implementation project(':score-lib')

    testImplementation Dependencies.javaeeUnitTest
    // Use JUnit Jupiter for testing.
    testImplementation Dependencies.junitJupiter
    testRuntimeOnly Dependencies.junitJupiterEngine
    testImplementation project(':test-lib')
    testImplementation Dependencies.mockitoCore
    testImplementation Dependencies.mockitoInline
}


optimizedJar {
    mainClassName = 'network.balanced.score.util.stability.StabilityImpl'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
        mainnet {
            uri = 'https://ctz.solidwallet.io/api/v3'
            nid = 0x1
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {
        arg("_feeHandler", "cx6c8f668de7ec23fffc1afc14f130e244cee773f5")
        arg("_bnusd", "cx5838cb516d6156a060f90e9a3de92381331ff024")
        arg("_feeIn", "500000000000000000")
        arg("_feeOut", "500000000000000000")
    }
}

test {
    useJUnitPlatform()
}