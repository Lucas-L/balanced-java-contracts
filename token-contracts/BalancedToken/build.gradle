import network.balanced.score.dependencies.Dependencies

version = '0.1.0'

dependencies {
    compileOnly Dependencies.javaeeApi
    implementation Dependencies.javaeeScorex
    implementation Dependencies.javaeeTokens

    testImplementation Dependencies.javaeeUnitTest
    // Use JUnit Jupiter for testing.
    testImplementation Dependencies.junitJupiter
    testRuntimeOnly Dependencies.junitJupiterEngine
    testImplementation Dependencies.mockitoInline
}

optimizedJar {
    mainClassName = 'network.balanced.score.tokens.BalancedToken'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
	parameters {
		arg('_initialSupply', '5000')
		arg('_decimals', '10')
	}
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
