/*
 * Copyright (c) 2022 Balanced.network.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import network.balanced.score.dependencies.Dependencies


version = '0.1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    compileOnly Dependencies.javaeeApi
    implementation Dependencies.javaeeScorex
    implementation project(':score-lib')

    testImplementation Dependencies.javaeeUnitTest
    // Use JUnit Jupiter for testing.
    testImplementation Dependencies.junitJupiter
    testRuntimeOnly Dependencies.junitJupiterEngine

    testImplementation Dependencies.mockitoCore
    testImplementation Dependencies.mockitoInline

    testImplementation project(':test-lib')


    intTestImplementation Dependencies.javaeeScoreClient

    intTestAnnotationProcessor Dependencies.javaeeScoreClient
    intTestImplementation Dependencies.iconSdk
    intTestImplementation Dependencies.jacksonDatabind


    compileOnly Dependencies.javaeeApi
    implementation Dependencies.javaeeScorex
    implementation Dependencies.minimalJson

    annotationProcessor Dependencies.javaeeScoreData
    compileOnly Dependencies.javaeeScoreData

    testImplementation Dependencies.javaeeUnitTest
    testImplementation Dependencies.javaeeTokens
    testImplementation Dependencies.json
    testImplementation Dependencies.junitJupiter
    testRuntimeOnly Dependencies.junitJupiterEngine
    testImplementation Dependencies.mockitoInline
    testImplementation Dependencies.mockitoCore


    intTestImplementation Dependencies.javaeeScoreClient
    intTestAnnotationProcessor Dependencies.javaeeScoreClient
    intTestImplementation Dependencies.iconSdk
    intTestImplementation Dependencies.jacksonDatabind
}

optimizedJar {
    mainClassName = 'network.balanced.score.tokens.sicx.SicxImpl'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    enableDebug = false
}

deployJar {
    endpoints {
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
        mainnet {
            uri = 'https://ctz.solidwallet.io/api/v3'
            nid = 0x1
        }
        berlin {
            uri = 'https://berlin.net.solidwallet.io/api/v3'
            nid = 0x7
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {}
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task integrationTest(type: Test, dependsOn: optimizedJar) {
    useJUnitPlatform()
    options {
        testLogging.showStandardStreams = true
        description = 'Runs integration tests.'
        group = 'verification'
        testClassesDirs = sourceSets.intTest.output.classesDirs
        classpath = sourceSets.intTest.runtimeClasspath

        systemProperty 'scoreFilePath', "../../sicx.zip"
        project.extensions.deployJar.arguments.each { arg -> systemProperty 'params.' + arg.name, arg.value
        }


        systemProperty 'url', scoreTest.url
        systemProperty 'nid', scoreTest.nid
        systemProperty 'keyStore', scoreTest.keystoreName
        systemProperty 'keyPassword', scoreTest.keystorePass
//        systemProperty 'isUpdate', "false"
//        systemProperty 'address', "cx2ad810776298b1946c6b57f7109d3a5602ae44f6"

        systemProperty 'staking.url', scoreTest.url
        systemProperty 'staking.nid', scoreTest.nid
        systemProperty 'staking.keyStore', scoreTest.keystoreName
        systemProperty 'staking.keyPassword', scoreTest.keystorePass
        systemProperty 'staking.scoreFilePath', "../../staking.zip"
//        systemProperty 'staking.isUpdate', "false"
//        systemProperty 'staking.address', "cxb205adfafde0a9e76539e2a405b9ce82ae8c4ee2"

    }
}